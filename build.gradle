apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// In this section you declare where to find the dependencies of your project
repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    //mavenLocal()
	maven { url 'https://dl.bintray.com/ethereum/maven/' }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()
}

List logger = [
	"org.slf4j:jul-to-slf4j:1.7.10",
	"org.apache.logging.log4j:log4j-api:2.1",
	"org.apache.logging.log4j:log4j-core:2.1",
	"org.apache.logging.log4j:log4j-slf4j-impl:2.1",
	"org.apache.logging.log4j:log4j-web:2.1"
]


// In this section you declare the dependencies for your production and test code
dependencies {
    compile logger
    runtime logger
    
   	compile 'mysql:mysql-connector-java:5.1.30'
   	runtime 'mysql:mysql-connector-java:5.1.30'
   	compile 'org.mybatis:mybatis:3.2.8'
   	runtime 'org.mybatis:mybatis:3.2.8'
   	compile 'org.mybatis:mybatis-spring:1.2.2'
   	runtime 'org.mybatis:mybatis-spring:1.2.2'
   	compile 'org.apache.commons:commons-text:1.2'
   	runtime 'org.apache.commons:commons-text:1.2'
   	
   	compile 'org.junit.platform:junit-platform-commons:1.1.0'
   	runtime 'org.junit.platform:junit-platform-commons:1.1.0'
   	
   	compile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
   	runtime 'org.junit.jupiter:junit-jupiter-api:5.1.0'
   	
   	compile 'org.apache.commons:commons-dbcp2:2.2.0'
   	runtime 'org.apache.commons:commons-dbcp2:2.2.0'
   	
   	compile 'org.apache.commons:commons-collections4:4.1'
   	runtime 'org.apache.commons:commons-collections4:4.1'
   	
   	compile 'org.ethereum:solcJ-all:0.4.25'
   	runtime 'org.ethereum:solcJ-all:0.4.25'
   	
   	compile 'org.fisco-bcos:web3sdk:2.0.3'
   	runtime 'org.fisco-bcos:web3sdk:2.0.3'
   	
   	compile 'org.springframework:spring-jdbc:4.3.18.RELEASE'
   	runtime 'org.springframework:spring-jdbc:4.3.18.RELEASE'
}

sourceSets {
	main {
		java {
	        srcDir 'src/main/java'
		}
        resources  {
            srcDir 'src/main/resources'
        }
	}
}

jar {
	destinationDir file('dist/apps')
	archiveName project.name + '.jar'
	exclude '**/*.xml'
	exclude '**/*.properties'
	exclude 'doc/*'

    doLast {
        copy {
            from file('src/main/resources/')
            into 'dist/conf'
        }
        copy {
            from file('src/main/script/')
            into 'dist/'
        }
		copy {
			from configurations.runtime
			into 'dist/lib'
		}
		copy {
			from file('.').listFiles().findAll{File f -> (f.name.endsWith('.bat') || f.name.endsWith('.sh') || f.name.endsWith('.env'))}
			into 'dist'
		}
	}
}
